server.port=18081
spring.cloud.function.definition=processStreamFromPcsTopic;processInput
#
# defaults
spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde

#
# Page views In
spring.cloud.stream.bindings.processInput-in-0.destination=pvs
spring.cloud.stream.bindings.processInput-in-0.consumer.header-mode=headers
#
# Page Count Out
spring.cloud.stream.bindings.processInput-out-0.destination=pcs
spring.cloud.stream.bindings.processInput-out-0.producer.use-native-encoding=true
spring.cloud.stream.kafka.streams.bindings.processInput-out-0.producer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.processInput-out-0.producer.value-serde=org.apache.kafka.common.serialization.Serdes$LongSerde
#
# Page Count In
spring.cloud.stream.bindings.processStreamFromPcsTopic-in-0.destination=pcs
spring.cloud.stream.bindings.processStreamFromPcsTopic-in-0.consumer.use-native-decoding=true
spring.cloud.stream.bindings.processStreamFromPcsTopic-in-0.group=pcs
spring.cloud.stream.bindings.processStreamFromPcsTopic-in-0.content-type=application/json
spring.cloud.stream.bindings.processStreamFromPcsTopic-in-0.consumer.header-mode=headers
spring.cloud.stream.kafka.streams.bindings.processStreamFromPcsTopic-in-0.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.bindings.processStreamFromPcsTopic-in-0.consumer.value-serde=org.apache.kafka.common.serialization.Serdes$LongSerde
spring.cloud.stream.kafka.streams.bindings.processStreamFromPcsTopic-in-0.consumer.application-id=pcin-kafka-streams-analytics-consumer

spring.application.name=kafka-streams-analytics-consumer

io.confluent.developer.topic.topic-name-pvs=pvs
io.confluent.developer.topic.topic-name-pcs=pcs
io.confluent.developer.topic.topic-name-changelog=kafka-streams-analytics-consumer-pcmv-changelog
io.confluent.developer.topic.topic-name-re-partition=kafka-streams-analytics-consumer-pcmv-repartition
io.confluent.developer.topic.replication=3
io.confluent.developer.topic.partitions=32
